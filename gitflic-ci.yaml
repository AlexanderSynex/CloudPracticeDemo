# Данный файл - шаблонная конфигурация CI/CD конвейера. Он может быть изменен по Вашему усмотрению. 
# Некоторые шаблоны требуют предварительной настройки перед запуском.
#
# Подробнее о синтаксисе можно узнать в документации:
# https://docs.gitflic.space/cicd/gitflic-ci-yaml

stages:
  - .pre
  - build
  - test
  - deploy

cache:
  paths:
    - .cache/pip

# before_script:
#   - python --version ; pip --version
#   - pip install virtualenv
#   - virtualenv venv
#   - . venv/bin/activate

# test:
#   stage: test
#   script:
#     - pip install ruff tox
#     - pip install --editable ".[test]"
#     - tox -e py,ruff

# run:
#   stage: build
#   script:
#     - python3 hello.py
#   artifacts:
#     paths:
#       - build/*
#   rules:
#     - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

# deploy:
#   stage: deploy
#   script: echo "Развертывание проекта"

variables:
    - DOCKER_REGISTRY_LOGIN: "$DOCKER_REGISTRY_LOGIN"
    - DOCKER_REGISTRY_PASSWD: "$DOCKER_REGISTRY_PASSWD"

# Unit test:
#   stage: test
#   before_script:
#     - python -m venv .venv
#     - .venv/bin/pip install --upgrade pip
#     - .venv/bin/pip install -r requirements.txt
#   script:
#     - echo "Starting pytest"
#     - .venv/bin/pytest tests/unit_tests
  

# # Сборка образа приложения и загрузка в докер реджистри
# Publish Docker app:
#   stage: deploy
#   variables:
#     - DOCKER_IMAGE_NAME: "${DOCKER_REGISTRY_LOGIN}/${CI_PROJECT_NAME}"
#   before_script:
#     - apk upgrade
#     - apk add docker  
#     - docker login -u "$DOCKER_REGISTRY_LOGIN" -p "$DOCKER_REGISTRY_PASSWD"
#   script:
#     - echo "Building $CI_PROJECT_NAME docker image to $DOCKER_REGISTRY_LOGIN"
#     - docker buildx build -t "$DOCKER_REGISTRY_LOGIN/$CI_PROJECT_NAME:latest" . --network=host
#   after_script:
#     - docker push "$DOCKER_REGISTRY_LOGIN/$CI_PROJECT_NAME:latest"
#   needs: [ Unit test ]

Functional Tests:
  before_script:
    - docker pull "$DOCKER_REGISTRY_LOGIN/$CI_PROJECT_NAME:latest"
    - docker images
    - docker run -p 5000:5000 "$DOCKER_REGISTRY_LOGIN/$CI_PROJECT_NAME:latest"
  script:
    - python -m venv .venv
    - .venv/bin/pip install --upgrade pip
    - .venv/bin/pip install pytest selenium
    - .venv/bin/pytest tests/functional_tests